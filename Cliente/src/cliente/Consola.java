/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import java.awt.Event;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Leonardo
 */
public class Consola extends javax.swing.JFrame {

    String _ip;
    int _puerto;
    DefaultListModel<String> _listModel = new DefaultListModel<>();
    ConexionServidor _conexionServidor;
    String _comando;
    String _usuario;
    String _ip_cliente;
    int _puerto_cliente;
    
    /**
     * Creates new form Consola
     */
    public Consola() {
        initComponents();
    }
    
    public Consola(String ip, int puerto){
        initComponents();
        
        
        
        this._ip = ip;
        this._puerto = puerto;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList_comandos = new javax.swing.JList<>();
        jTextField_comando = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList_comandos.setEnabled(false);
        jScrollPane1.setViewportView(jList_comandos);

        jTextField_comando.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_comando.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_comandoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_comandoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_comando)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_comando, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_comandoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_comandoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_comandoKeyTyped

    private void jTextField_comandoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_comandoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==Event.ENTER) {
            _listModel.addElement("> "+jTextField_comando.getText());
            jList_comandos.setModel(_listModel);
            _comando = jTextField_comando.getText();
            jTextField_comando.setText("");
            _conexionServidor = new ConexionServidor(_ip, _puerto,_comando,_ip_cliente,_puerto_cliente);
            System.out.println(_comando);
            if(_comando.toLowerCase().equals("dir")){
                _conexionServidor.start();
                
                String _respuesta = _conexionServidor.obtenerVideos();
                
                String _video = "";
                String [] _videoSplit;
                String[] _respuestaSplit = _respuesta.split("@");
                for (String string : _respuestaSplit) {
                    _video = string;
                    _videoSplit = _video.split(":");
                    _listModel.addElement("ID: "+_videoSplit[0]+
                            "     Nombre del Video: "+_videoSplit[1]+
                            "     Tama√±o del Video: "+_videoSplit[2]+" bytes");
                    
                    jList_comandos.setModel(_listModel);
            
                }
                
            }
            else{
                if(_comando.toLowerCase().equals("videos_mas_descargados")){
                    
                    System.out.println("Videos Mas Descargados");
                    
                }
                else
                {
                    if(_comando.toLowerCase().equals("clientes_mas_videos")){
                        
                        System.out.println("Clientes Mas Videos");
                        
                    }
                    else
                    {
                        String [] _comandoSplit = _comando.split(" ");
                        if(_comandoSplit[0].toLowerCase().equals("insc")){
                            
                            _conexionServidor.start();
                            
                            IniciarServidor _IniciarServidor = new  IniciarServidor(this._puerto);
                            _IniciarServidor.start();
                            
                        }
                        else{
                            
                            if(_comandoSplit[0].toLowerCase().equals("video")){
                                
                                _conexionServidor.start();
                                
                            }
                            
                        }
                        
                    }
                }
            }
            
            
            
            
            
        }
    }//GEN-LAST:event_jTextField_comandoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consola().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList_comandos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField_comando;
    // End of variables declaration//GEN-END:variables
}
